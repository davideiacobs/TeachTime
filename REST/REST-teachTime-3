LOGIN UTENTE
URL: /auth/login
VERBO: POST
prende in input un oggetto contenente mail e password di un utente e restituisce un oggetto contenente il relativo token di sessione/autenticazione.




LOGOUT UTENTE 
URL: /auth/logout
VERBO: POST
Prende in input un token di sessione/autenticazione e chiude la relativa sessione, invalidando il token




INSERIMENTO NUOVO UTENTE NEL SISTEMA:
URL: /users
VERBO: POST
Inserisce un nuovo utente nel sistema. L’oggetto passato come payload conterrà tutti i dati del profilo utente, ad esempio:
{
	"key":123,
	"nome":"pinco", 
	"cognome":"pallino", 
	"email":"pp@gmail.it",
	"password":"abcdef",
	"dataDiNascita":"27-04-1995",
	"città":"Roma",
	"telefono":3456789012,
	"titoloDiStudio":"Laurea Base in Informatica",
	"imgProfilo":"profilo.png"
}




ESTRAZIONE UTENTE PER CHIAVE:
URL: /users/{ID}
VERBO: GET
Restituisce il profilo dell’utente {ID} sotto forma dello stesso oggetto utilizzato come payload per l’inserimento (POST) tramite la URL 
/users, ad esclusione della password.




AGGIORNAMENTO PROFILO UTENTE (città,telefono,titolo di studio) PER CHIAVE:
URL: /users/{ID}
VERBO: PUT
Aggiorna il profilo dell’utente {ID}. Il payload è lo stesso oggetto utilizzato per l’inserimento (POST) tramite la URL /users.




INSERIMENTO RIPETIZIONE:
URL: /repetitions 
VERBO: POST
Inserisce una nuova ripetizione nel sistema. L'oggetto passato come payload conterrà tutti i dati della ripetizione, ad esempio:
{
	"ID":234,
	"tutor": {
		"tutor_ID":123,
		"nome":"...", 
		"cognome":"...", 
		"dataDiNascita":"27-04-1995",
		"titoloDiStudio":"...",
		"uri":"..."
	},
	"città":"...",
	"luogoDiIncontro":"...",
	"prezzoPerOra":12,
	"descrizione":"...",
	"materia":"...",
	"listaArgomenti":[
				"nome":"...",
				"nome":"...",
				"nome":"...",
	]
}

ex:
{
        "tutor_key":1,
	"tutor": {
                "key":1,
		"nome":"davide", 
		"cognome":"iacobelli", 
		"dataDiNascita":"1995-04-27",
		"titoloDiStudi":"magari"
	},
	"città":"sora",
	"luogoIncontro":"andotepare",
	"costo":500,
	"descr":"top",
	"materia_key":1,

	"argomenti":[
                          {
                           "key":1,
                           "nome":"programmazione python",
                           "materia_key":1},
                          {
                          "key":4,
                          "nome":"database",
                          "materia_key":1}
	]
}


ESTRAZIONE RIPETIZIONE PER CHIAVE:
URL: /repetitions/{ID}
VERBO: GET
Restituisce le informazioni relative alla ripetizione {ID} sotto forma dello stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /repetitions.

ex:{
  "key": 28,
  "luogoIncontro": "andotepare",
  "costo": 500,
  "descr": "top",
  "città": "sora",
  "tutor_key": 1,
  "materia_key": 1,
  "dirty": true,
  "argomenti": [
    {
      "key": 1,
      "nome": "programmazione python",
      "materia": {
        "key": 1,
        "nome": "informatica",
        "dirty": true
      },
      "materia_key": 1,
      "dirty": true
    },
    {
      "key": 4,
      "nome": "database",
      "materia": {
        "key": 1,
        "nome": "informatica",
        "dirty": true
      },
      "materia_key": 1,
      "dirty": true
    }
  ]


AGGIORNAMENTO RIPETIZIONE PER CHIAVE (prezzo/ora,descrizione,luogo incontro, lista argomenti):
URL: /repetitions/{ID}
VERBO: PUT
Aggiorna le informazioni relative alla ripetizione {ID}. Il payload è lo stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /repetitions, ad esclusione di tutor.




LISTA RIPETIZIONI PER CHIAVE TUTOR:
URL: /repetitions?{tutor_ID}
VERBO: GET
Restituisce la lista di URI che rappresentano tutte le ripetizioni con informazioni associate al tutor {tutor_ID} presenti nel sistema.




CANCELLAZIONE RIPETIZIONE PER CHIAVE:
URL: /repetitions/{ID}
VERBO: DELETE
Elimina la ripetizione {ID}.



LISTA RIPETIZIONI PER MATERIA E CITTA' (ed eventualemente per argomento):
URL: /repetitions?{CITY}&{SUBJECT}&[{ARGUMENT}]
VERBO: GET 
Restituisce la lista delle URI che rappresentano tutte le ripetizioni presenti nel sistema, includendo solo quelle con informazioni associate alla città e alla materia specificate in {CITY} e in {SUBJECT}. La lista può essere ulteriormente filtrata tramite il parametro aggiuntivo {ARGUMENT} che può indicare uno specifico argomento che deve essere presente nella lista di argomenti contenuta nella ripetizione.




LISTA FEEDBACK RICEVUTI DA UN TUTOR:
URL: /feedbacks?{tutor_ID}
VERBO: GET
Restituisce la lista delle URI che rappresentano tutti i feedback ricevuti dal tutor {tutor_ID}.




INSERIMENTO FEEDBACK:
URL: /feedbacks
VERBO: POST
Inserimento nel sistema di un nuovo feedback ricevuto dal tutor {tutor_ID}. L'oggetto passato come payload conterrà tutti i dati del feedback, ad esempio:
{
	"ID":345,
	"uri_studente": "...",                        
	"ripetizione":{
			"tutor": {
				"tutor_ID":123,
				"nome":"...", 
				"cognome":"...", 
				"email":"...",
				"uri_tutor":...
			},
			"città":"...",
			"luogoDiIncontro":"...",
			"prezzoPerOra":12
	},
	"data":"21-05-2017",
	"ora":"16:30",
	"argomento":"...",
	"stato":0
}




ESTRAZIONE VOTO MEDIO TUTOR:
URL: /users/{ID}/feedbacks/vote
VERBO: GET
Calcola e restituisce il voto medio dell'utente a partire dai voti contenuti in ogni feedback da esso ricevuto.




/***non serve più***/
ESTRAZIONE INFORMAZIONI TUTOR PER CHIAVE RIPETIZIONE:
URL: /repetitions/{ID}/user
VERBO: GET
Restituisce le informazioni relative allo user contenuto nella ripetizione {ID} sotto forma dello stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /users, ad esclusione della password.
/******************/



INSERIMENTO PRENOTAZIONE:
URL: repetitions/{repetition_ID}/bookings
VERBO: POST
Inserimento nel sistema di una nuova prenotazione alla ripetizione {repetition_ID}. L'oggetto passato come payload conterrà tutti i dati della prenotazione, ad esempio:
{
	"ID":345,
	"studente":{
		 "student_ID":"232",
		 "uri_studente": "..."  
	},                  
	"ripetizione":{
			"tutor": {
				"nome":"...", 
				"cognome":"...", 
				"email":"...",
				"uri_tutor":...
			},
			"città":"...",
			"luogoDiIncontro":"...",
			"prezzoPerOra":12
	},
	"data":"21-05-2017",
	"ora":"16:30",
	"argomento":"...",
	"stato":0
}




ESTRAZIONE PRENOTAZIONI PER CHIAVE STUDENTE:
URL: /bookings/{ID}
VERBO: GET
Restituisce le informazioni relative alla prenotazione con {ID} sotto forma dello stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /repetitons/{repetition_ID}/bookings.





ESTRAZIONE PRENOTAZIONI PER CHIAVE STUDENTE:
URL: /bookings?{student_ID}
VERBO: GET
Restituisce le URI che rappresentano tutte le prenotazioni che hanno come studente {student_ID} (quelle con stato "completato senza feedback" poichè serve a visualizzare le ripetizioni per la quaale lo studente può rilasciare feedback)




RECUPERO LISTA ARGOMENTI PER MATERIA:
URL: /subjects/{ID}/arguments
VERBO: GET



INSERIMENTO ARGOMENTO:
URL: /subjects/{ID}/arguments
VERBO: POST










