LOGIN UTENTE
URL: /auth/login
VERBO: POST
prende in input un oggett contenente mail e password di un utente e restituisce un oggetto contenente il relativo token di sessione/autenticazione.


LOGOUT UTENTE 
URL: /auth/logout
VERBO: POST
Prende in input un token di sessione/autenticazione e chiude la relativa sessione, invalidando il token


INSERIMENTO NUOVO UTENTE NEL SISTEMA:
URL: /users
VERBO: POST
Inserisce un nuovo utente nel sistema. L’oggetto passato come payload conterrà tutti i dati del profilo utente, ad esempio:
{
	"nome":"pinco", 
	"cognome":"pallino", 
	"email":"pp@gmail.it",
	"password":"abcdef",
	"dataDiNascita":"27-04-1995",
	"città":"Roma",
	"telefono":3456789012,
	"titoloDiStudio":"Laurea Base in Informatica"
}


ESTRAZIONE UTENTE PER CHIAVE:
URL: /users/{ID}
VERBO: GET
Restituisce il profilo dell’utente {ID} sotto forma dello stesso oggetto utilizzato come payload per l’inserimento (POST) tramite la URL 
/users, ad esclusione della password.


AGGIORNAMENTO PROFILO UTENTE (città,telefono,titolo di studio) PER CHIAVE:
URL: /users/{ID}
VERBO: PUT
Aggiorna il profilo dell’utente {ID}. Il payload è lo stesso oggetto utilizzato per l’inserimento (POST) tramite la URL /users.


INSERIMENTO RIPETIZIONE:
URL: /repetitions  --oppure-- /users/{ID}/repetitions????
VERBO: POST
Inserisce una nuova ripetizione nel sistema. L'oggetto passato come payload conterrà tutti i dati della ripetizione, ad esempio:
{
	"tutor":{                                   //serve mettere tutti i dati relativi al tutor o basta la sua chiave??
		"nome":"pinco", 
		"cognome":"pallino", 
		"email":"pp@gmail.it",
		"password":"abcdef",
		"dataDiNascita":"27-04-1995",
		"città":"Roma",
		"telefono":3456789012,
		"titoloDiStudio":"Laurea Base in Informatica"
	},
	"città":"Roma",
	"luogoDiIncontro":"a scelta dello studente",
	"prezzoPerOra":12,
	"descrizione":"blablabla",
	"materia":"informatica",
	"listaArgomenti":[
				"nome":"programmazione_java",
				"nome":"programmazione_python"
	]
}


ESTRAZIONE RIPETIZIONE PER CHIAVE:
URL: /repetitions/{ID}
VERBO: GET
Restituisce le informazioni relative alla ripetizione {ID} sotto forma dello stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /repetitions, ad esclusione della password.


LISTA RIPETIZIONI PER CHIAVE TUTOR:
URL: /repetitions?{tutor_ID} --oppure-- /users/{ID}/repetitions
VERBO: GET
Restituisce la lista di URI che rappresentano tutte le ripetizioni con informazioni associate al tutor {tutor_ID} presenti nel sistema.


AGGIORNAMENTO RIPETIZIONE PER CHIAVE (prezzo/ora,descrizione,luogo incontro, lista argomenti):
URL: /repetitions/{ID}
VERBO: PUT
Aggiorna le informazioni relative alla ripetizione {ID}. Il payload è lo stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /repetitions, ad esclusione di tutor.


CANCELLAZIONE RIPETIZIONE PER CHIAVE:
URL: /repetitions/{ID}
VERBO: DELETE
Elimina la ripetizione {ID}.


LISTA RIPETIZIONI PER MATERIA E CITTA':
URL: /repetitions/{CITY}/{SUBJECT}[?{FILTER}]
VERBO: GET 
Restituisce la lista delle URI che rappresentano tutte le ripetizioni presenti nel sistema, includendo solo quelle con informazioni associate alla città e alla materia specificate in {CITY} e in {SUBJECT}. La lista può essere ulteriormente filtrata tramite la query string {FILTER} che può indicare uno specifico argomento che deve essere presente nella lista di argomenti contenuta nella ripetizione.


LISTA FEEDBACK RICEVUTI DA UN TUTOR:
URL: /users/{tutor_ID}/feedbacks
VERBO: GET
Restituisce la lista delle URI che rappresentano tutti i feedback ricevuti dal tutor {tutor_ID}.


INSERIMENTO FEEDBACK:
URL: /users/{tutor_ID}/feedbacks
VERBO: POST
Inserimento nel sistema di un nuovo feedback ricevuto dal tutor {tutor_ID}. L'oggetto passato come payload conterrà tutti i dati del feedback, ad esempio:
{
	"prenotazione":{
		"studente": {
			"nome":"...", 
			"cognome":"...", 
			"email":"...",
			"password":"...",
			"dataDiNascita":"1-11-1998",
			"città":"...",
			"telefono":33133435323,
			"titoloDiStudio":"..."
		},
		"ripetizione":{
				"tutor": {
					"nome":"...", 
					"cognome":"...", 
					"email":"...",
					"password":"...",
					"dataDiNascita":"27-04-1995",
					"città":"...",
					"telefono":3333333333,
					"titoloDiStudio":"..."
				},
				"città":"...",
				"luogoDiIncontro":"...",
				"prezzoPerOra":12,
				"descrizione":"...",
				"materia":"...",
				"listaArgomenti":[
							"nome":"...",
							"nome":"...",
							"nome":"...",
				 ]
		},
		"data":"21-05-2017",
		"ora":"16:30",
		"argomento":"...",
		"stato":0
	},
	"voto":5,
	"commento":"..."
}


ESTRAZIONE VOTO MEDIO TUTOR:
URL: /users/{ID}/feedbacks/vote
VERBO: GET
Calcola e restituisce il voto medio dell'utente a partire dai voti contenuti in ogni feedback da esso ricevuto.


ESTRAZIONE INFORMAZIONI TUTOR PER CHIAVE RIPETIZIONE:
URL: /repetitions/{ID}/user
VERBO: GET
Restituisce le informazioni relative allo user contenuto nella ripetizione {ID} sotto forma dello stesso oggetto utilizzato come payload dell'inserimento (POST) tramite la url /users, ad esclusione della password.


ESTRAZIONE PRENOTAZIONI PER CHIAVE STUDENTE:
URL: /users/{ID}/bookings
VERBO: GET
Restituisce le URI che rappresentano tutte le prenotazioni che hanno come studente {ID}.


ESTRAZIONE RIPETIZIONE DA ID PRENOTAZIONE:
URL: /bookings/{ID}/repetition
VERBO: GET


ESTRAZIONI PROFILO TUTOR DA RIPETIZIONE:
URL: /repetitions/{ID}/user
VERBO: GET


RECUPERO LISTA ARGOMENTI PER MATERIA:
URL: /subjects/{ID}/arguments
VERBO: GET


INSERIMENTO ARGOMENTO:
URL: /subjects/{ID}/arguments
VERBO: POST









